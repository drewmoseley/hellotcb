image: docker

services:
  - docker:dind

variables:
  # This should be set by docker image already, just to be sure...
  DOCKER_HOST: tcp://docker:2375
  # Use overlayfs driver for better performance
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  TASKS_DISABLE_INTERACTIVE_INPUT: "True"
  TASKS_OVERRIDE_ENV: "False"
  TORIZON_CI_SETTINGS_FILE: ".vscode/settings.json"
  DOCKER_PSSWD: "$DOCKER_PSSWD"
  DOCKER_LOGIN: "$DOCKER_LOGIN"
  PLATFORM_CLIENT_ID: "$PLATFORM_CLIENT_ID"
  PLATFORM_CLIENT_SECRET: "$PLATFORM_CLIENT_SECRET"
  PLATFORM_CREDENTIALS: "$PLATFORM_CREDENTIALS"  # added to support decoding step

stages:
  - setup
  - build
  - push
  - deploy


# Step 1: Initial Setup
initial_setup:
  stage: setup
  image:
    name: torizonextras/torizon-dev:dev
    docker:
      user: root
    entrypoint: [""]
  script:
    - echo $CI_PROJECT_DIR > abs-path
    - cat abs-path
    - xonsh ./.conf/validate-json.xsh
    - xonsh ./.vscode/tasks.xsh run validate-pipeline-settings
    - xonsh ./.conf/apply-ci-settings-file.xsh
    - cat $GITLAB_ENV > build.env
    - xonsh ./.vscode/tasks.xsh run tcb-setup

  dependencies:
    - get_workspace
  artifacts:
    paths:
      - abs-path
    reports:
      dotenv: build.env


# Step 2: Build TorizonCore image
build_image:
  stage: build
  image:
    name: torizonextras/torizon-dev:dev
    docker:
      user: root
    entrypoint: [""]
  script:
    - xonsh ./.vscode/tasks.xsh run tcb-build

  dependencies:
    - initial_setup

# Step 2: Push OS Package to Platform
push_to_platform:
  stage: push
  image:
    name: torizonextras/torizon-dev:dev
    docker:
      user: root
    entrypoint: [""]
  script:
    - echo $PLATFORM_CREDENTIALS | base64 -d > credentials.zip
    - xonsh ./.vscode/tasks.xsh run tcb-platform-push-ostree

  dependencies:
    - build_image

# Step 4: Deploy To Fleet (Only on main branch)
deploy_to_fleet:
  stage: deploy
  image:
    name: torizonextras/torizon-dev:dev
    docker:
      user: root
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - xonsh ./.vscode/tasks.xsh run platform-update-fleet

  dependencies:
    - push_to_platform
