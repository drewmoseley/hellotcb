name: Build & Deploy TorizonCore
on:
  - push
  - workflow_dispatch

jobs:
  build-deploy:
    runs-on: ubuntu-24.04
    name: Build & Deploy TorizonCore
    container:
      image: torizonextras/torizon-dev:dev
      options: --user root
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: storage/
          key: tcb

      - name: Initial Setup
        shell: bash
        env:
          TASKS_DISABLE_INTERACTIVE_INPUT: "True"
          TASKS_OVERRIDE_ENV: "False"
          TORIZON_CI_SETTINGS_FILE: ".vscode/settings.json"
          DOCKER_PSSWD: ${{ secrets.DOCKER_PSSWD }}
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
          PLATFORM_CREDENTIALS: ${{ secrets.PLATFORM_CREDENTIALS }}
        run: |

          echo "${{ github.workspace }}" >> abs-path
          cat abs-path
          xonsh ./.conf/validate-json.xsh
          xonsh ./.vscode/tasks.xsh run validate-pipeline-settings
          xonsh ./.conf/apply-ci-settings-file.xsh
          xonsh ./.vscode/tasks.xsh run tcb-setup


      - name: Build TorizonCore Image
        shell: bash
        env:
          TASKS_DISABLE_INTERACTIVE_INPUT: "True"
          TASKS_OVERRIDE_ENV: "False"
        run: |

          xonsh ./.vscode/tasks.xsh run tcb-build

      - name: Push OS Package to Platform
        shell: bash
        env:
          TASKS_DISABLE_INTERACTIVE_INPUT: "True"
          TASKS_OVERRIDE_ENV: "False"
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
          PLATFORM_CREDENTIALS: ${{ secrets.PLATFORM_CREDENTIALS }}
        run: |

          echo $PLATFORM_CREDENTIALS | base64 -d > credentials.zip
          xonsh ./.vscode/tasks.xsh run tcb-platform-push-ostree

      - name: Deploy to Fleet
        shell: bash
        env:
          TASKS_DISABLE_INTERACTIVE_INPUT: "True"
          TASKS_OVERRIDE_ENV: "False"
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |

          xonsh ./.vscode/tasks.xsh run platform-update-fleet
